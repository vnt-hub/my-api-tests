"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonRequest = exports.BaseHttpRequest = void 0;
const got_1 = require("got");
class BaseHttpRequest {
    constructor() {
        this.options = {
            http2: true
        };
    }
    prefixUrl(url) {
        this.options.prefixUrl = url;
        return this;
    }
    /**
     * @param url Can be full url, but only in case prefixUrl is not set
     */
    url(url) {
        this.options.url = url;
        return this;
    }
    cookieJar(cookiesJar) {
        this.options.cookieJar = cookiesJar;
        return this;
    }
    method(method) {
        this.options.method = method;
        return this;
    }
    headers(headers) {
        this.options.headers = this.options.headers ?? {};
        this.options.headers = {
            ...this.options.headers,
            ...headers
        };
        return this;
    }
    bearerToken(bearerToken) {
        return this.headers({
            'Authorization': bearerToken
        });
    }
    searchParams(searchParams) {
        this.options.searchParams = searchParams;
        return this;
    }
    async send() {
        return got_1.default(this.options);
    }
}
exports.BaseHttpRequest = BaseHttpRequest;
class JsonRequest extends BaseHttpRequest {
    constructor() {
        super();
        this.options = {
            ...this.options,
            responseType: "json"
        };
    }
    body(body) {
        this.options.json = body;
        return this;
    }
}
exports.JsonRequest = JsonRequest;
